#LyX 2.4 created this file. For more info see https://www.lyx.org/
\lyxformat 620
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children no
\language american
\language_package default
\inputencoding utf8
\fontencoding auto
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_roman_osf false
\font_sans_osf false
\font_typewriter_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement class
\float_alignment class
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_formatted_ref 0
\use_minted 0
\use_lineno 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tablestyle default
\tracking_changes false
\output_changes false
\change_bars false
\postpone_fragile_content true
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\docbook_table_output 0
\docbook_mathml_prefix 1
\end_header

\begin_body

\begin_layout Standard
Sea 
\begin_inset Formula $S\subseteq\omega^{n}\times\Sigma^{*m}$
\end_inset

 un conjunto no vacío.
 Entonces son equivalentes:
\end_layout

\begin_layout Standard
(1) 
\begin_inset Formula $S$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-enumerable
\end_layout

\begin_layout Standard
(2) Hay un programa 
\begin_inset Formula $\mathcal{P}\in Pro^{\Sigma}$
\end_inset

 tal que:
\end_layout

\begin_layout Standard
\begin_inset Formula $\qquad$
\end_inset

(a) Para cada 
\begin_inset Formula $x\in\omega$
\end_inset

,
 tenemos que 
\begin_inset Formula $\mathcal{P}$
\end_inset

 se detiene partiendo desde el estado 
\begin_inset Formula $\parallel x\parallel$
\end_inset

 y llega a un estado de la forma 
\begin_inset Formula $((x_{1},\dots,x_{n}),(\alpha_{1},\dots,\alpha_{m}))$
\end_inset

 tal que $(x_1,
\backslash
dots,x_n,
\backslash
alpha_1,
\backslash
dots,
\backslash
alpha_m)
\backslash
in S$ 
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\nospellcheck off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\qquad$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\nospellcheck default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
(b) Para todo $(x_1,
\backslash
dots,x_n,
\backslash
alpha_1,
\backslash
dots,
\backslash
alpha_m)
\backslash
in S$ hay un $x
\backslash
in
\backslash
omega$ tal que $
\backslash
mathcal P$ se detiene partiendo desde el estado $||x||$ y llega a un estado de la forma $((x_1,
\backslash
dots,x_n),(
\backslash
alpha_1,
\backslash
dots,
\backslash
alpha_m))$
\end_layout

\begin_layout Standard
(Caso n=2,
 m=1)
\end_layout

\begin_layout Standard
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—
—

\end_layout

\begin_layout Standard
## $(1)
\backslash
implies(2)$ 
\end_layout

\begin_layout Standard
> Por hipótesis existe una función que computa el conjunto S no vacío
\end_layout

\begin_layout Standard
> Podemos definir macros para sus coordenadas $
\backslash
Sigma$-computables
\end_layout

\begin_layout Standard
> Las usamos para dar el programa que cumple con (a) y (b).
\end_layout

\begin_layout Standard
Dado que S no es vacío,
 tenemos por hipótesis tenemos que existe alguna función $F:
\backslash
omega
\backslash
to
\backslash
omega^{2}
\backslash
times
\backslash
Sigma^{*1}$ tal que $I_F=S$ y $F_{(i)}$ es $
\backslash
Sigma$-computable para cada $i
\backslash
in
\backslash
{1,2,3
\backslash
}$.
\end_layout

\begin_layout Standard
Luego,
 por la *Proposición de las Macros* tenemos que existen las siguientes Macros:
\end_layout

\begin_layout Standard
$$
\end_layout

\begin_layout Standard

\backslash
begin{align}
\end_layout

\begin_layout Standard
&[V2
\backslash
gets F_{(1)}(V1)]
\backslash

\backslash

\end_layout

\begin_layout Standard
&[V2
\backslash
gets F_{(2)}(V1)]
\backslash

\backslash

\end_layout

\begin_layout Standard
&[W2
\backslash
gets F_{(3)}(V1)]
\backslash

\backslash

\end_layout

\begin_layout Standard

\backslash
end{align}
\end_layout

\begin_layout Standard
$$
\end_layout

\begin_layout Standard
Las cuales nos permiten dar el siguiente programa
\end_layout

\begin_layout Standard
$$
\end_layout

\begin_layout Standard

\backslash
begin{align} 
\end_layout

\begin_layout Standard
&[P3
\backslash
gets F_{(3)}(N1)]
\backslash

\backslash

\end_layout

\begin_layout Standard
&[N2
\backslash
gets F_{(2)}(N1)]
\backslash

\backslash

\end_layout

\begin_layout Standard
&[N1
\backslash
gets F_{(1)}(N1)]
\backslash

\backslash

\end_layout

\begin_layout Standard

\backslash
end{align}
\end_layout

\begin_layout Standard
$$
\end_layout

\begin_layout Standard
Que claramente termina para todo estado $||x||,
 x
\backslash
in
\backslash
omega$ y ademas termina en algún estado de la forma $((x_1,x_2,y_1,
\backslash
dots),(
\backslash
alpha_1,
\backslash
beta_1,
\backslash
dots))$ tal que $(x_1,x_2,
\backslash
alpha_1)
\backslash
in S$.
\end_layout

\begin_layout Standard
<div style="page-break-after:
 always;"></div>
\end_layout

\begin_layout Standard
## $(2)
\backslash
implies(1)$ 
\end_layout

\begin_layout Standard
> Suponemos $P
\backslash
in Pro^{
\backslash
Sigma}$ cumple con (a) y (b) de 2.
 
\end_layout

\begin_layout Standard
> Extraemos del mismo los i sub-programas que calculan las $F_{(i)}$
\end_layout

\begin_layout Standard
> Notar que las horquillas de los $n+m$ sub-programas resultante tienen las propiedades que hacen que enumere a S
\end_layout

\begin_layout Standard
Suponemos $P
\backslash
in Pro^{
\backslash
Sigma}$ cumple con (a) y (b) de 2.
 Sean:
\end_layout

\begin_layout Standard
$$
\end_layout

\begin_layout Standard

\backslash
begin{align}
\end_layout

\begin_layout Standard

\backslash
mathcal P_1 &= 
\backslash
mathcal PN1
\backslash
gets N1 
\backslash

\backslash

\end_layout

\begin_layout Standard

\backslash
mathcal P_2 &= 
\backslash
mathcal PN1
\backslash
gets N2 
\backslash

\backslash

\end_layout

\begin_layout Standard

\backslash
mathcal P_{3} &= 
\backslash
mathcal PN1
\backslash
gets P1 
\backslash

\backslash

\end_layout

\begin_layout Standard

\backslash
end{align}
\end_layout

\begin_layout Standard
$$
\end_layout

\begin_layout Standard
Las concatenaciones del programa con la instrucción que guarda en $N1$ la coordenada relevante.
 Usando estos programas podemos definir las $n+m$ funciones $
\backslash
Sigma$-computables
\end_layout

\begin_layout Standard
$$
\end_layout

\begin_layout Standard

\backslash
begin{align}
\end_layout

\begin_layout Standard
F_{(1)} &= 
\backslash
Psi^{1,0,
\backslash
#}_{
\backslash
mathcal P_1} 
\backslash

\backslash

\end_layout

\begin_layout Standard
F_{(2)} &= 
\backslash
Psi^{1,0,
\backslash
#}_{
\backslash
mathcal P_2} 
\backslash

\backslash

\end_layout

\begin_layout Standard
F_{(3)} &= 
\backslash
Psi^{1,0,*}_{
\backslash
mathcal P_{3}} 
\backslash

\backslash

\end_layout

\begin_layout Standard

\backslash
end{align}
\end_layout

\begin_layout Standard
$$
\end_layout

\begin_layout Standard
Tales que definen $F = [F_{(1)},F_{(2)},F_{(3)}]:
\backslash
omega
\backslash
to
\backslash
omega^{2}
\backslash
times
\backslash
Sigma^{*1}$ que computa al conjunto $S$.
\end_layout

\begin_layout Standard
Por hipótesis el programa $
\backslash
mathcal P$ termina para todo estado inicial $||x||,
 x
\backslash
in
\backslash
omega$ y ademas su estado final es de la forma $((x_1,x_2,y_1,
\backslash
dots),(
\backslash
alpha_1,
\backslash
beta_1,
\backslash
dots))$ tal que $(x_1,x_2,
\backslash
alpha_1)
\backslash
in S$.
\end_layout

\begin_layout Standard
Es decir cada programa $
\backslash
mathcal P_i$ también termina para todo estado inicial $||x||,
 x
\backslash
in
\backslash
omega$ y la primera coordenada del estado al terminar contiene el i-esimo elemento de $(x_1,x_2,
\backslash
alpha_1)
\backslash
in S$,
 es decir que $I_F=S$.
\end_layout

\begin_layout Standard
$$
\backslash
tag*{$
\backslash
blacksquare$}$$
\end_layout

\end_body
\end_document
